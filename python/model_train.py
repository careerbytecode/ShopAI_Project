# model_train.py
# Simple logistic regression trained on features generated by ETL
import os
import pandas as pd
from sqlalchemy import create_engine
from sklearn.linear_model import LogisticRegression

DATABASE_URL = os.getenv('DATABASE_URL', 'postgresql://postgres:password@localhost:5432/ai_course')
engine = create_engine(DATABASE_URL)

def train():
    df = pd.read_sql('SELECT * FROM user_feature_store_py;', engine)
    if df.empty:
        print("No data found in user_feature_store_py. Run ETL first.")
        return
    # create a simple target: inactive = 1 if days_since_last_order > 5 else 0
    df['target'] = (df['days_since_last_order'] > 5).astype(int)
    features = ['total_orders','total_spend','avg_spend','days_since_last_order']
    X = df[features].fillna(0)
    y = df['target']
    model = LogisticRegression()
    model.fit(X, y)
    print('Model trained. Coefficients:', dict(zip(features, model.coef_[0])))
if __name__ == '__main__':
    train()
